# savedsearches.conf

# Global maintenance mode tracker (will be enabled automatically the health tracker of the first tenant that will be created)
[massexecutor4csvgen_executor]
cron_schedule = 2 * * * *
description = Scheduled report for mass executor CSV gen
disabled = 1
dispatch.earliest_time = -1h
dispatch.latest_time = now
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
schedule_window = 5
run_on_startup = true
search  = | massexecutor4csvgen savedsearch_name="massexecutor4csvgen_abstract" simulate="False" earliest="-1h" latest="now"

# Global maintenance mode tracker (will be enabled automatically the health tracker of the first tenant that will be created)
[massexecutor4csvgen_abstract]
description = Abstract report for mass executor CSV gen
disabled = 1
dispatch.earliest_time = -1h
dispatch.latest_time = now
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
schedule_window = 5
run_on_startup = true
search  = | tstats count where `csvgen_root_constraint` by index, sourcetype, source\
``` Extract Metadata ```\
| rex field=source "(?<csv_app>[^\/]*)\/lookups\/(?<csv_lookup_file>.*)"\
``` set the first spl logic ```\
| eval spl = "| tstats `csvgen_get_header(" . index . "," . sourcetype . "," . source . ")` where index=" . index . " sourcetype=" . sourcetype . " source=" . source\
``` use a stats latest then remove Splunk Metadata fields ```\
| eval spl = spl . " | stats latest(*) as \"*\" by index, sourcetype, source, record_md5 | fields - index, sourcetype, source, host, punct, splunk_server, ah, linecount, timestamp, eventtype, tag, tag::*, record_md5"\
| eval spl = spl . " | rename \"\\\"*\\\"\" as \"*\""\
\
``` sometimes, the header can ingested too - this is not expected but we have a solution ```\
| eval spl = spl . " | search NOT ( [ `csvgen_get_header_filter(" . index . "," . sourcetype . "," . source . ")` ] )"\
``` if we have conflicts between the source looking and Splunk metadata fields like sourcetype, we can rename extracted_* at this stage ```\
| eval spl = spl . " | rename \"extracted_*\" as \"*\""\
\
``` if we have more than a single lookup, keep only the one starting by gsoc ```\
| eventstats count as csv_total_count, values(csv_app) as csv_apps by csv_lookup_file\
| `cssgen_handle_dup`\
| where csv_keep="true"\
| fields - csv_keep, csv_total_count, csv_apps\
``` finally, generate the SPL ```\
| eval spl = spl . " | outputlookup create_empty=f createinapp=true " . csv_lookup_file . " | stats count"\
| where isnotnull(spl)\
| table index, sourcetype, source, csv_app, csv_lookup_file, spl
